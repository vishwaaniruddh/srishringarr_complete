# Generated by Django 2.0.5 on 2018-12-19 10:14

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='userDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters', max_length=75, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('full_name', models.CharField(blank=True, max_length=254, verbose_name='full name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('mobile', models.CharField(max_length=10)),
                ('password', models.CharField(max_length=225, verbose_name='password')),
                ('desktop_mac_id', models.CharField(blank=True, max_length=50)),
                ('mobile_mac_id', models.CharField(blank=True, max_length=50)),
                ('imei_no', models.CharField(blank=True, max_length=50)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_phone_verify', models.BooleanField(default=False)),
                ('is_email_verify', models.BooleanField(default=False)),
                ('gender', models.CharField(blank=True, max_length=50)),
                ('user_address', models.CharField(max_length=255)),
                ('user_street', models.CharField(max_length=255, null=True)),
                ('user_landmark', models.CharField(max_length=255, null=True)),
                ('user_city', models.CharField(max_length=255, null=True)),
                ('user_state', models.CharField(max_length=255, null=True)),
                ('user_pincode', models.CharField(max_length=255, null=True)),
                ('user_country', models.CharField(max_length=255, null=True)),
                ('landline', models.CharField(max_length=10)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_group', models.CharField(blank=True, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'userdetails',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='userApiKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=False)),
                ('site_type', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_apikey',
            },
        ),
    ]
